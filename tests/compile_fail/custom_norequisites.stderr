error[E0277]: the trait bound `MyEnum: FromStr` is not satisfied
  --> tests/compile_fail/custom_norequisites.rs:17:10
   |
17 | #[derive(StructConf)]
   |          ^^^^^^^^^^ the trait `FromStr` is not implemented for `MyEnum`
   |
   = note: this error originates in the derive macro `StructConf` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyEnum: Default` is not satisfied
   --> tests/compile_fail/custom_norequisites.rs:17:10
    |
17  | #[derive(StructConf)]
    |          ^^^^^^^^^^ the trait `Default` is not implemented for `MyEnum`
    |
note: required by `std::default::Default::default`
   --> $RUST/core/src/default.rs
    |
    |     fn default() -> Self;
    |     ^^^^^^^^^^^^^^^^^^^^^
    = note: this error originates in the derive macro `StructConf` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyStruct: FromStr` is not satisfied
  --> tests/compile_fail/custom_norequisites.rs:17:10
   |
17 | #[derive(StructConf)]
   |          ^^^^^^^^^^ the trait `FromStr` is not implemented for `MyStruct`
   |
   = note: this error originates in the derive macro `StructConf` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyStruct: Default` is not satisfied
   --> tests/compile_fail/custom_norequisites.rs:17:10
    |
17  | #[derive(StructConf)]
    |          ^^^^^^^^^^ the trait `Default` is not implemented for `MyStruct`
    |
note: required by `std::default::Default::default`
   --> $RUST/core/src/default.rs
    |
    |     fn default() -> Self;
    |     ^^^^^^^^^^^^^^^^^^^^^
    = note: this error originates in the derive macro `StructConf` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: the method `to_string` exists for enum `MyEnum`, but its trait bounds were not satisfied
   --> tests/compile_fail/custom_norequisites.rs:17:10
    |
6   | enum MyEnum {
    | -----------
    | |
    | method `to_string` not found for this
    | doesn't satisfy `MyEnum: ToString`
    | doesn't satisfy `MyEnum: std::fmt::Display`
...
17  | #[derive(StructConf)]
    |          ^^^^^^^^^^ method cannot be called on `MyEnum` due to unsatisfied trait bounds
    |
    = note: the following trait bounds were not satisfied:
            `MyEnum: std::fmt::Display`
            which is required by `MyEnum: ToString`
note: the following trait must be implemented
   --> $RUST/core/src/fmt/mod.rs
    |
    | / pub trait Display {
    | |     /// Formats the value using the given formatter.
    | |     ///
    | |     /// # Examples
...   |
    | |     fn fmt(&self, f: &mut Formatter<'_>) -> Result;
    | | }
    | |_^
    = note: this error originates in the derive macro `StructConf` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: the method `to_string` exists for struct `MyStruct`, but its trait bounds were not satisfied
   --> tests/compile_fail/custom_norequisites.rs:17:10
    |
12  | struct MyStruct {
    | ---------------
    | |
    | method `to_string` not found for this
    | doesn't satisfy `MyStruct: ToString`
    | doesn't satisfy `MyStruct: std::fmt::Display`
...
17  | #[derive(StructConf)]
    |          ^^^^^^^^^^ method cannot be called on `MyStruct` due to unsatisfied trait bounds
    |
    = note: the following trait bounds were not satisfied:
            `MyStruct: std::fmt::Display`
            which is required by `MyStruct: ToString`
note: the following trait must be implemented
   --> $RUST/core/src/fmt/mod.rs
    |
    | / pub trait Display {
    | |     /// Formats the value using the given formatter.
    | |     ///
    | |     /// # Examples
...   |
    | |     fn fmt(&self, f: &mut Formatter<'_>) -> Result;
    | | }
    | |_^
    = note: this error originates in the derive macro `StructConf` (in Nightly builds, run with -Z macro-backtrace for more info)
